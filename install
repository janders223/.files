#! /usr/bin/env bash
#
# Author: Jim Anders <jimanders223@gmail.com>

{
    # abort on nonzero exitstatus
    set -o errexit
    # abort on unbound variable
    set -o nounset
    # don't hide errors within pipes
    set -o pipefail

    main() {
        # Ask for the administrator password upfront
        sudo -v

        # Keep-alive: update existing `sudo` time stamp until `.macos` has finished
        while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
            if ! [ -x "$(command -v nix-env)" ]; then
                echo "[INSTALL]: Installing base nix system"
                install_nix
                echo "[INSTALL]: Done"
            fi

            if [ "$(uname)" == "Darwin" ]; then
                echo "[INSTALL]: Detected macOS, installing configuration"
                if ! [ -x "$(command -v mas)" ]; then
                    echo "[INSTALL]: Installing mas"
                    install_mas
                    echo "[INSTALL]: Done"
                fi

                if ! [ -e "/Applications/1Password 7.app" ]; then
                    echo "[INSTALL]: Installing 1Password app"
                    install_1pass
                    echo "[INSTALL]: Done"
                fi

                if [ -x "$(command -v mas)" ];then
                    install_mas_apps
                fi

                if ! [ -x "$(command -v darwin-rebuild)" ]; then
                    echo "[INSTALL]: Installing nix darwin modules"
                    install_nix_darwin
                    echo "[INSTALL]: Done"
                fi

                download_dotfiles
            fi

            echo "[INSTALL]: Building the nix system"
            darwin-rebuild switch -I darwin-config="${HOME}/src/dotfiles/default.nix" -I nixpkgs="${HOME}/src/dotfiles/nixpkgs"
            echo "[INSTALL]: Done"
            echo "[INSTALL]: Some changes may require a reboot to take effect"
        }

#{{{ Helper functions
install_nix() {
    local dir
    dir=$(mktemp -d)
    cd "${dir}"
    curl -L -o install https://nixos.org/nix/install
    $(command -v sh) install --daemon
    cd "${HOME}"
}

install_nix_darwin() {
    local dir
    dir=$(mktemp -d)
    cd "${dir}"
    /nix/var/nix/profiles/default/bin/nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer
    ./result/bin/darwin-installer
    cd "${HOME}"
}

download_dotfiles() {
    if ! [ -d "${HOME}/src/dotfiles" ];then
        echo "[INSTALL]: Downloading janders223 .files"
        mkdir -p "${HOME}/src"
        cd "${HOME}/src"
        #curl -L https://github.com/janders223/.files/archive/master.tar.gz | tar zx
        echo "[INSTALL]: Done"
        cd "${HOME}"
    fi
}

install_mas() {
    local dir
    dir=$(mktemp -d)
    cd "${dir}"
    curl -LO https://github.com/mas-cli/mas/releases/download/v1.6.3/mas.pkg
    sudo installer -pkg mas.pkg -target /
    cd "${HOME}"
}

install_mas_apps() {
    echo "[INSTALL]: Install mas apps"
    # sign in is currently disabled
    # mas signin jimanders223@gmail.com
    APPS=(
    1462114288 # Grammarly for Safari (9.2)
    937984704 # Amphetamine (4.2)
    931657367 # Calcbot (1.0.7)
    1262957439 # Textual IRC Client (7.1.1)
    1436953057 # GhosteryLite (1.0.0)
    405399194  # Kindle (1.26.1)
    )

    for app in "${APPS[@]}"; do
        mas install "$app"
    done
    echo "[INSTALL]: Done"
}

install_1pass() {
    local dir
    dir=$(mktemp -d)
    cd "${dir}"
    curl -L https://app-updates.agilebits.com/download/OPM7 >> 1password.pkg
    sudo installer -pkg 1password.pkg -target /
    cd "${HOME}"
}

#}}}

main
}
